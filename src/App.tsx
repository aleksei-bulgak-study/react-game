import React, { ReactElement, useState } from 'react';
import { BrowserRouter as Router, Route } from 'react-router-dom';
import { Switch, Redirect } from 'react-router';
import styled from 'styled-components';
import Layout from './layouts';
import Header from './components/Header';
import Footer from './components/Footer';
import { loadSettingsFromStorage } from './utils';
import FloatingButton from './components/FloatingButton';
import { Settings } from 'settings';

type KeyValuePair = {
    key: string;
    value: number;
};

type AppProps = {
    className?: string;
    onThemeChange: (themeName: string) => void;
};

const onFullScreenPressed = () => {
    if (!document.fullscreenElement) {
        document.documentElement.requestFullscreen();
    } else {
        document.exitFullscreen();
    }
};

const defaultSettings: Settings = { boardSize: 4, maxValue: 2048, elementsPerAction: 2, valuesAutoGenerated: [2, 4] };

const App: React.FC<AppProps> = ({ className, onThemeChange }): ReactElement => {
    const [settings, setSettings] = useState(loadSettingsFromStorage('settings', defaultSettings));

    const onSettingsChange = ({ key, value }: KeyValuePair) => {
        setSettings((prevSettings) => ({ ...prevSettings, [key]: value }));
    };

    return (
        <Router>
            <Header />
            <main className={className}>
                <Switch>
                    <Route exact path="/play" component={() => <Layout.GamePage settings={settings} />} />
                    <Route
                        exact
                        path="/settings"
                        component={() => (
                            <Layout.SettingsPage
                                onThemeChange={onThemeChange}
                                settings={settings}
                                onSettingsChange={onSettingsChange}
                            />
                        )}
                    />
                    <Route exact path="/score" component={Layout.ScoreBoardPage} />
                    <Redirect to={'/play'} />
                </Switch>
            </main>
            <Footer />
            <FloatingButton onClick={onFullScreenPressed} title="Full screen toggle" />
        </Router>
    );
};

export default styled(App)`
    min-width: 1024px;

    min-height: 500px;
    flex-grow: 1;
    padding: 2rem;
    display: flex;

    @media (max-width: 1024px) {
        min-width: 500px;
        padding: 0;
    }

    & > * {
        flex-grow: 1;
    }
`;
